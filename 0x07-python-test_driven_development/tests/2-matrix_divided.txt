The ``matrix_divided`` module
=============================

Using ``matrix_divided``
------------------------

Import file
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test divide integers matrix by 2
>>> matrix_divided([[1, 2, 3, 4], [5, 6, 7, 8]], 2)
[[0.5, 1.0, 1.5, 2.0], [2.5, 3.0, 3.5, 4.0]]

Test divide integers matrix by 3.5
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3.5)
[[0.29, 0.57, 0.86], [1.14, 1.43, 1.71]]

Test divide floats matrix by 2
>>> matrix_divided([[1.2, 2.2, 3.2, 4.2], [5.2, 6.2, 7.2, 8.2]], 2)
[[0.6, 1.1, 1.6, 2.1], [2.6, 3.1, 3.6, 4.1]]

Test divide floats and integers matrix by 4
>>> matrix_divided([[1.2, 2.2, 3.2, 4.2], [1.2, 2.2, 3.2, 4]], 4)
[[0.3, 0.55, 0.8, 1.05], [0.3, 0.55, 0.8, 1.0]]

Test divide matrix by positive infinity float
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test divide matrix by negative infinity float
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -float("inf"))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Test divide matrix by zero integer
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Test divide matrix by zero float
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0.00)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Test divide matrix by zero plus
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 10e-99999)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Test divide matrix by zero minus
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -10e-99999)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Test divide matrix whose rows are not all lists by 2
>>> matrix_divided([1, [1, 2, 3, 4], [1, 2, 3, 4]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test divide matrix whose rows are not all lists by 2
>>> matrix_divided([[1, 2, 3, 4], "Holberton", [1, 2, 3, 4]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test divide matrix whose at least one element is not integer or float by 2
>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, "Holberton"]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test divide matrix whose list elements have not the same size by 2
>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Test divide matrix by a string
>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4]], "Holberton")
Traceback (most recent call last):
TypeError: div must be a number

Test divide matrix by a dictionary
>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4]], {})
Traceback (most recent call last):
TypeError: div must be a number

Test divide matrix by a list
>>> matrix_divided([[1, 2, 3, 4], [1, 2, 3, 4]], [1, 2])
Traceback (most recent call last):
TypeError: div must be a number

Test calling matrix_divided without paramters
